Note: 
- JavaScript is a dynamically typed language
- all no premitive datatype has typeof an object


// *********************** Variables & datatypes✅ ****************************
let name = "aman";        // string
let isStudent = true;       // boolean
                                         // null - standalone value (null is an object)
let age = 21;                   // number  - 2 to the power 53
// bigint - usually used in stock market 
let brother;                    // undefined 
// symbol - unique
// object

console.table([typeof name,typeof isStudent, typeof age, typeof null, typeof brother]);

// here null type will return "OBJECT", hence null is an object

// Datatypes: 
//   Premitives: 7 types -> string, boolean, number, null, undefined, symbol, BigInt (call by value)
//   Reference (non premitive) -> array, objects, functions  (call by reference)

// ********************** Conversion Operations: ✅ ******************************
/*
        Quick Overview: 
        "33"  -> 33
        "33abc" -> NaN
        true  -> 1
        null   -> 0
        undefined -> NaN

        "" -> false
        "aman" -> true
        1 -> true
        0 - > false

        Conversion could be done using, Number(), Boolean(), String() etc functions.
*/

let score = "33";        // now if you want this score to be changed from string to number
console.log(score);
let numscore = Number(score);
console.log(numscore);          // will print 33 as number

// MISTAKE ->
let score2 = "33abc";
let numscore2 = Number(score2);
console.log(typeof numscore2)         // will print number
console.log(numscore2)                     // will print NaN - Not a Number

console.log(Number(null))                 // will print 0
console.log(Number(undefined))      // will print NaN

console.log(Number(true))                // will print 1 for true and 0 for false;

const obj = {
    name: "aman",
    age: 32
}

console.log(obj)                              // will print "Function"



// ***********************   Memory in JavaScript ✅  ****************************

// Stack (Primitive Datatypes ke liye)
// Heap (Non Primitive Datatypes ke liye)

// Note: Jb bhi koi value stack se milti h to vo copy milti h brna agar heap se milti h to vo reference provide krti h

// ********************** Number and Maths in JavaScript ✅ ***********************

const score = 400;
console.log(score)                        // will print 400

You can explicitly define a number even though javascript is pretty smart to know which variable to store in which type

const num = new Number(40);                // like this
console.log(num);                          // will print [Number: 40]
console.log(num.toString());        // will print 40 as string
console.log(num.toString().length);           // will print 2
console.log(num.toFixed(2));       // 

// toPrecision() method
let num = 123.899;
console.log(num.toPrecision(3))      // will return 124
console.log(num.toPrecision(4))      // will return 123.9
console.log(num.toPrecision(2))      // 1.2e+2

// toLocaleString();
let number = 1000000;
console.log(number.toLocaleString());            // will print 1,000,000 - us based like 100 thousand
console.log(number.toLocaleString('en-IN'));    // now will print 10,00,000 - indian based


// there are some other things with Number
Number.MAX_VALUE
Number.MIN_VALUE
Number.MIN_SAFE_INTEGER
Number.MAX_SAFE_INTEGER
Number.isInteger("23");                              // false;



// ********************** MATH ✅ *******************************
console.log(Math);                          // object with several useful methods
console.log(Math.abs(-4))              // will print 4;
console.log(Math.round(4.6))        // will print 5
console.log(Math.ceil(4.6))            // will print 5;
console.log(Math.floor(4.6))          // will print 4

console.log(Math.min(2,3,5,6));     // will print 2
console.log(Math.max(2,3,6,2,5))  // will print 6

console.log(Math.random());         // hmesha 0 se 1 ke beech me value aati h randomly 

// ab agar hme badi value chaiye to hm multiply kr skte h like by 10 aur 100 or 1000
console.log(Math.random()*10);
// kabhi kabhi value 0 bhi ho skti h, to usko avoid krne ke liye hm +1 kr dete h
console.log((Math.random()*10)+1);

// formula to get value through random function in a certain range
const min = 10;
const max = 20;

console.log(Math.floor(Math.random()*(max-min+1))+min);


// *********************** DATE & TIME ✅ ******************************

const mydate = new Date();
console.log(mydate.toString());
console.log(mydate.toDateString());
console.log(mydate.toLocaleString());

console.log(typeof(mydate))              // will print Object

let mycreatedDate = new Date(2023,0,23);
console.log(mycreatedDate.toDateString())            // Mon Jan 23 2023  - month start with 0 in javascript

let mydate = new Date(2023-01-25);
console.log(mydate.toLocaleString())         // 25/1/2023

let mytimestamp = Date.now();
console.log(mytime)                           // will print time in miliseconds from Jan 1970

// if you want to convert date into miliseconds then
console.log(mydate.getTime());        // now will print time in miliseconds
console.log(Math.floor(Date.now()/1000))     // will print time in seconds

// to get specific things from date
console.log(mydate.getDate());
console.log(mydate.getFullYear());
console.log(mydate.getDay());
console.log(mydate.getMonth());
console.log(mydate.get)


// *********************** PLAYING WITH ARRAYS ✅ **********************************

const arr = [1,2,3,4,5,"hello",false];
const newarr = new Array(1,2,3,5,6,8);

// SHALLOW COPY :  reference is passed
// DEEP COPY :     only value is passed

console.log(arr);
arr.unshift(9)                                   // adds 9 at the starting of the array
arr.shift();                                        // removes first element of the array
arr.push(5);
arr.pop();
console.log(arr.includes(5));          // returns true;
console.log(arr.includes('priyanshu'))  // return false;
console.log(arr.indexOf(4))             // returns 3
console.log(arr.indexOf(19))           // returns -1

const stringarr = arr.join();            // convert array elements into string form 12345Hellofalse like this


const ar = [1,2,3,4,5,6];
// slice and splice function
console.log(ar)                            // [1, 2, 3, 4, 5, 6]

const slicearr = ar.slice(2,4)          
console.log(slicearr)                  // [ 3, 4 ]
console.log(ar)                           // [1,2,3,4,5,6]  nothing changed in the actual array

const splicear = ar.splice(1,3)   // [ 2, 3, 4 ]
console.log(ar)                           // [ 1, 5, 6 ]    mtlb that portion gayab ho gya


// SOME ADVANCED
const arr1 = [1,2,3,4];
const arr2 = [2,3,4,3];

arr1.push(arr2);                      //  [1,2,3,4,[2,3,4,3]];
const newarr = arr1.concat(arr2)                   
console.log(newarr)              // [1,2,3,4,2,3,4,3];

// or use spread operator
const allelem = [...arr1, ...arr2];                 // [1,2,3,4,2,3,4,3]

const array = [1,2,3,4,[10,22,[33,45]],55,0,[3,5,3]];
// ab agar is array ko single dimension bnana h to 
const newar = array.flat(Infinity);           //   [1,2,3,4,10,22,33,45,55,0,3,5,3];

console.log(Array.from("aman"));          // will print ['a','m','a', 'n'];
console.log(Array.from({name: "priyanshu"}))    // will return [] - empty array because it's not able to convert in array

const a = 100;
const b = 200;
const c = 300;

console.log(Array.of(a,b,c));                  // will print [a,b,c]


// *********************** OBJECTS ✅ *********************************

// Agar hm constructor ke through object create krte h to vo ek singleton object hota h
Object.create()

// another way 
const obj = {
    name: "priyanshu",                           // by default ye name ko "name" consider krta h
    age: 21,
    isLoggedIn: false,
    course: "MCA",
    lastLoginDays: ["Sunday","Monday","Saturday"],
};

// accessing properties in Object
console.log(obj.name);
console.log(obj[name]);                  // name is not defined error
console.log(obj["name"])                // ab thik h - priyanshu aayega


// *********************** Strings and their Functions *******************************

krna h 

// *********************** DOM MANIPULATION ✅ **********************************

console.log(document)                // to HTML document form me dikhayega
console.dir(document)                 // directory form mtlb jaise object ki form me dikhaega


Popular Methods to select any element:
There are mainly 6 methods to select any DOM element;

document.getElementById('id');                           // return type - Element
document.getElementsByClassName('classname');   // return type - HTMLCollection
document.getElementsByTagName('h1');             // return type - HTMLCollection
document.getElementsByName('name')            // returntype - nodelist
document.querySelector('.myclass')                   // returntype - element  - agar class select krni h to ".classname" agar id to "#idname" and tag select krna h to simple 'tagname';
document.querySelectorAll('.myclass')               // returntype - nodelist


// practice
document.getElementById('id').className         // returns class of the element selected using id
document.getElementById('id').getAttribute('id')     // this will return id of that element
document.getElementById('id').getAttribute('class')     // this will return id of that element

document.getElementById('id').setAttribute('class', 'myclass')     // this will return id of that element


// Accessing content in an HTML Element

there are three methods:

- textContent  - shows all the content, both hidden and not hidden
- innerText  -   doesn not show up the hidden content
- innerHTML - ye andar ka html bhi aapko laake dedeta h



// ******************* DOM SELECTORS - NodeList and HTMLCollection ************************

// templist - array jaisa h but map and reduce jaise function ni hote, so we can't use them

const templist = document.querySelectorAll('li');

// if we'll do this
templist.style.color = 'green'           // there comes are error because it is a nodelist
templist[0].style.color = 'green'      // this will make the first li color green

// we can also access templist using forEach function - because it doesn't have map function but has forEach method
templist.forEach(function(list){
    list.style.color = 'green';
});

// to convert HTMLCollection to array
// if you'll collect elements through its classname method, you'll get a HTMLCollection
// but HTMLCollection neither have map function neither have forEach method. so in order to access elements of HTMLCollection we'll have to convert it into array

const collection = document.getElementsByClassName('list-class');       // returns a HTMLCollection

Array.from(collection);

// now we'll be able to use forEach and map method

// let's work on wikipedia

const headinglist = document.getElementsByTagName('h3');

const headingarr = Array.from(headinglist);

headingarr.forEach(function(heading){
    heading.style.color = 'red';
    heading.innerText = 'Hello Priyanshu';
    heading.style.backgroundColor = 'gray';
})


















